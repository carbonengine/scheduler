# Use of this file is deprecated, but is being kept around for backwards compatability purposes. It will be deleted soon
include(CMakeFindDependencyMacro)

@CCP_PACKAGE_CONFIG_TARGET_DEPENDENCIES@

if(APPLE)
    set(_IMPORT_LIBRARY_SUFFIX ".a")
    set(_SHARED_LIBRARY_SUFFIX ".so")
else()
    set(_IMPORT_LIBRARY_SUFFIX ${CMAKE_IMPORT_LIBRARY_SUFFIX})
    if(@CCP_PACKAGE_CONFIG_EXPORT_DLL@)
        set(_SHARED_LIBRARY_SUFFIX ${CMAKE_SHARED_LIBRARY_SUFFIX})
    else()
        set(_SHARED_LIBRARY_SUFFIX ".pyd")
    endif()
endif()

if(NOT TARGET @CCP_PACKAGE_CONFIG_TARGET@)
    set(_IMPORT_PREFIX ${CMAKE_CURRENT_LIST_DIR})
    add_library(@CCP_PACKAGE_CONFIG_TARGET@ @CCP_PACKAGE_CONFIG_TARGET_TYPE@ IMPORTED)
    set_target_properties(@CCP_PACKAGE_CONFIG_TARGET@ PROPERTIES
        INTERFACE_INCLUDE_DIRECTORIES "@CCP_PACKAGE_CONFIG_TARGET_INTERFACE_INCLUDE_DIRECTORIES@"
        INTERFACE_LINK_LIBRARIES "@CCP_PACKAGE_CONFIG_TARGET_INTERFACE_LINK_LIBRARIES@"
        INTERFACE_COMPILE_DEFINITIONS "@CCP_PACKAGE_CONFIG_TARGET_INTERFACE_COMPILE_DEFINITIONS@"
        IMPORTED_CONFIGURATIONS "@CCP_PACKAGE_CONFIG_CONFIGURATIONS@"
    )
    set_property(TARGET @CCP_PACKAGE_CONFIG_TARGET@ APPEND PROPERTY IMPORTED_CONFIGURATIONS "@CCP_PACKAGE_CONFIG_CONFIGURATIONS@")
    foreach(CCT @CCP_PACKAGE_CONFIG_CONFIGURATIONS@)
        string(TOLOWER ${CCT} _LCCT)
        string(TOUPPER ${CCT} _UCCT)
        set(_IMP_LOC_PROP IMPORTED_LOCATION_${_UCCT})
        set(_IMP_IMP_PROP IMPORTED_IMPLIB_${_UCCT})
        get_target_property(_TARGET_TYPE @CCP_PACKAGE_CONFIG_TARGET@ TYPE)
        if(${_TARGET_TYPE} STREQUAL SHARED_LIBRARY)
            if(WIN32)
                set(_VENDOR_PATH ${CCP_VENDOR_BIN_PATH})
            else()
                set(_VENDOR_PATH ${CCP_VENDOR_LIB_PATH})
            endif()
            if(${_LCCT} STREQUAL "release")
                set(_IMP_IMP_VAL ${_IMPORT_PREFIX}/${CCP_VENDOR_LIB_PATH}/@CCP_PACKAGE_CONFIG_TARGET_FILE_NAME@${_IMPORT_LIBRARY_SUFFIX})
            else()
                set(_IMP_IMP_VAL ${_IMPORT_PREFIX}/${CCP_VENDOR_LIB_PATH}/@CCP_PACKAGE_CONFIG_TARGET_FILE_NAME@_${_LCCT}${_IMPORT_LIBRARY_SUFFIX})
            endif()
            set_target_properties(@CCP_PACKAGE_CONFIG_TARGET@ PROPERTIES ${_IMP_IMP_PROP} ${_IMP_IMP_VAL})
            set(_IMP_LOC_SUFFIX ${_SHARED_LIBRARY_SUFFIX})
        else()
            set(_VENDOR_PATH ${CCP_VENDOR_LIB_PATH})
            set(_IMP_LOC_SUFFIX ${_IMPORT_LIBRARY_SUFFIX})
        endif()
        if(${_LCCT} STREQUAL "release")
            set(_IMP_LOC_VAL ${_IMPORT_PREFIX}/${_VENDOR_PATH}/@CCP_PACKAGE_CONFIG_TARGET_FILE_NAME@${_IMP_LOC_SUFFIX})
        else()
            set(_IMP_LOC_VAL ${_IMPORT_PREFIX}/${_VENDOR_PATH}/@CCP_PACKAGE_CONFIG_TARGET_FILE_NAME@_${_LCCT}${_IMP_LOC_SUFFIX})
        endif()
        if(NOT EXISTS ${_IMP_LOC_VAL})
            message(FATAL_ERROR "Missing @CCP_PACKAGE_CONFIG_TARGET@ library ${_IMP_LOC_VAL}, is a build and perforce publish for the '${CCT}' configuration missing?")
        endif()
        message(DEBUG "Setting @CCP_PACKAGE_CONFIG_TARGET@ property ${_IMP_LOC_PROP} to ${_IMP_LOC_VAL}")
        set_target_properties(@CCP_PACKAGE_CONFIG_TARGET@ PROPERTIES ${_IMP_LOC_PROP} ${_IMP_LOC_VAL})
    endforeach()
endif()
